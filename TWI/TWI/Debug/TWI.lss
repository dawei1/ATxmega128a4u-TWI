
TWI.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000488  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00802000  00000488  0000051c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000015  00802000  00802000  0000051c  2**0
                  ALLOC
  3 .stab         00000714  00000000  00000000  0000051c  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000097  00000000  00000000  00000c30  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00000cc7  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 000001f0  00000000  00000000  00000cf6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   000031eb  00000000  00000000  00000ee6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000007e7  00000000  00000000  000040d1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000f0a  00000000  00000000  000048b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000448  00000000  00000000  000057c4  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    000016a8  00000000  00000000  00005c0c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000f33  00000000  00000000  000072b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 000001b0  00000000  00000000  000081e7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	fd c0       	rjmp	.+506    	; 0x1fc <__ctors_end>
   2:	00 00       	nop
   4:	11 c1       	rjmp	.+546    	; 0x228 <__bad_interrupt>
   6:	00 00       	nop
   8:	0f c1       	rjmp	.+542    	; 0x228 <__bad_interrupt>
   a:	00 00       	nop
   c:	0d c1       	rjmp	.+538    	; 0x228 <__bad_interrupt>
   e:	00 00       	nop
  10:	0b c1       	rjmp	.+534    	; 0x228 <__bad_interrupt>
  12:	00 00       	nop
  14:	09 c1       	rjmp	.+530    	; 0x228 <__bad_interrupt>
  16:	00 00       	nop
  18:	07 c1       	rjmp	.+526    	; 0x228 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	05 c1       	rjmp	.+522    	; 0x228 <__bad_interrupt>
  1e:	00 00       	nop
  20:	03 c1       	rjmp	.+518    	; 0x228 <__bad_interrupt>
  22:	00 00       	nop
  24:	01 c1       	rjmp	.+514    	; 0x228 <__bad_interrupt>
  26:	00 00       	nop
  28:	ff c0       	rjmp	.+510    	; 0x228 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	fd c0       	rjmp	.+506    	; 0x228 <__bad_interrupt>
  2e:	00 00       	nop
  30:	fb c0       	rjmp	.+502    	; 0x228 <__bad_interrupt>
  32:	00 00       	nop
  34:	57 c1       	rjmp	.+686    	; 0x2e4 <__vector_13>
  36:	00 00       	nop
  38:	f7 c0       	rjmp	.+494    	; 0x228 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	f5 c0       	rjmp	.+490    	; 0x228 <__bad_interrupt>
  3e:	00 00       	nop
  40:	f3 c0       	rjmp	.+486    	; 0x228 <__bad_interrupt>
  42:	00 00       	nop
  44:	f1 c0       	rjmp	.+482    	; 0x228 <__bad_interrupt>
  46:	00 00       	nop
  48:	ef c0       	rjmp	.+478    	; 0x228 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	ed c0       	rjmp	.+474    	; 0x228 <__bad_interrupt>
  4e:	00 00       	nop
  50:	eb c0       	rjmp	.+470    	; 0x228 <__bad_interrupt>
  52:	00 00       	nop
  54:	e9 c0       	rjmp	.+466    	; 0x228 <__bad_interrupt>
  56:	00 00       	nop
  58:	e7 c0       	rjmp	.+462    	; 0x228 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	e5 c0       	rjmp	.+458    	; 0x228 <__bad_interrupt>
  5e:	00 00       	nop
  60:	e3 c0       	rjmp	.+454    	; 0x228 <__bad_interrupt>
  62:	00 00       	nop
  64:	e1 c0       	rjmp	.+450    	; 0x228 <__bad_interrupt>
  66:	00 00       	nop
  68:	df c0       	rjmp	.+446    	; 0x228 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	dd c0       	rjmp	.+442    	; 0x228 <__bad_interrupt>
  6e:	00 00       	nop
  70:	db c0       	rjmp	.+438    	; 0x228 <__bad_interrupt>
  72:	00 00       	nop
  74:	d9 c0       	rjmp	.+434    	; 0x228 <__bad_interrupt>
  76:	00 00       	nop
  78:	d7 c0       	rjmp	.+430    	; 0x228 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	d5 c0       	rjmp	.+426    	; 0x228 <__bad_interrupt>
  7e:	00 00       	nop
  80:	d3 c0       	rjmp	.+422    	; 0x228 <__bad_interrupt>
  82:	00 00       	nop
  84:	d1 c0       	rjmp	.+418    	; 0x228 <__bad_interrupt>
  86:	00 00       	nop
  88:	cf c0       	rjmp	.+414    	; 0x228 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	cd c0       	rjmp	.+410    	; 0x228 <__bad_interrupt>
  8e:	00 00       	nop
  90:	cb c0       	rjmp	.+406    	; 0x228 <__bad_interrupt>
  92:	00 00       	nop
  94:	c9 c0       	rjmp	.+402    	; 0x228 <__bad_interrupt>
  96:	00 00       	nop
  98:	c7 c0       	rjmp	.+398    	; 0x228 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	c5 c0       	rjmp	.+394    	; 0x228 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	c3 c0       	rjmp	.+390    	; 0x228 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	c1 c0       	rjmp	.+386    	; 0x228 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	bf c0       	rjmp	.+382    	; 0x228 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	bd c0       	rjmp	.+378    	; 0x228 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	bb c0       	rjmp	.+374    	; 0x228 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	b9 c0       	rjmp	.+370    	; 0x228 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	b7 c0       	rjmp	.+366    	; 0x228 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	b5 c0       	rjmp	.+362    	; 0x228 <__bad_interrupt>
  be:	00 00       	nop
  c0:	b3 c0       	rjmp	.+358    	; 0x228 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	b1 c0       	rjmp	.+354    	; 0x228 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	af c0       	rjmp	.+350    	; 0x228 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	ad c0       	rjmp	.+346    	; 0x228 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	ab c0       	rjmp	.+342    	; 0x228 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	a9 c0       	rjmp	.+338    	; 0x228 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	a7 c0       	rjmp	.+334    	; 0x228 <__bad_interrupt>
  da:	00 00       	nop
  dc:	a5 c0       	rjmp	.+330    	; 0x228 <__bad_interrupt>
  de:	00 00       	nop
  e0:	a3 c0       	rjmp	.+326    	; 0x228 <__bad_interrupt>
  e2:	00 00       	nop
  e4:	a1 c0       	rjmp	.+322    	; 0x228 <__bad_interrupt>
  e6:	00 00       	nop
  e8:	9f c0       	rjmp	.+318    	; 0x228 <__bad_interrupt>
  ea:	00 00       	nop
  ec:	9d c0       	rjmp	.+314    	; 0x228 <__bad_interrupt>
  ee:	00 00       	nop
  f0:	9b c0       	rjmp	.+310    	; 0x228 <__bad_interrupt>
  f2:	00 00       	nop
  f4:	99 c0       	rjmp	.+306    	; 0x228 <__bad_interrupt>
  f6:	00 00       	nop
  f8:	97 c0       	rjmp	.+302    	; 0x228 <__bad_interrupt>
  fa:	00 00       	nop
  fc:	95 c0       	rjmp	.+298    	; 0x228 <__bad_interrupt>
  fe:	00 00       	nop
 100:	93 c0       	rjmp	.+294    	; 0x228 <__bad_interrupt>
 102:	00 00       	nop
 104:	91 c0       	rjmp	.+290    	; 0x228 <__bad_interrupt>
 106:	00 00       	nop
 108:	8f c0       	rjmp	.+286    	; 0x228 <__bad_interrupt>
 10a:	00 00       	nop
 10c:	8d c0       	rjmp	.+282    	; 0x228 <__bad_interrupt>
 10e:	00 00       	nop
 110:	8b c0       	rjmp	.+278    	; 0x228 <__bad_interrupt>
 112:	00 00       	nop
 114:	89 c0       	rjmp	.+274    	; 0x228 <__bad_interrupt>
 116:	00 00       	nop
 118:	87 c0       	rjmp	.+270    	; 0x228 <__bad_interrupt>
 11a:	00 00       	nop
 11c:	85 c0       	rjmp	.+266    	; 0x228 <__bad_interrupt>
 11e:	00 00       	nop
 120:	83 c0       	rjmp	.+262    	; 0x228 <__bad_interrupt>
 122:	00 00       	nop
 124:	81 c0       	rjmp	.+258    	; 0x228 <__bad_interrupt>
 126:	00 00       	nop
 128:	7f c0       	rjmp	.+254    	; 0x228 <__bad_interrupt>
 12a:	00 00       	nop
 12c:	7d c0       	rjmp	.+250    	; 0x228 <__bad_interrupt>
 12e:	00 00       	nop
 130:	7b c0       	rjmp	.+246    	; 0x228 <__bad_interrupt>
 132:	00 00       	nop
 134:	79 c0       	rjmp	.+242    	; 0x228 <__bad_interrupt>
 136:	00 00       	nop
 138:	77 c0       	rjmp	.+238    	; 0x228 <__bad_interrupt>
 13a:	00 00       	nop
 13c:	75 c0       	rjmp	.+234    	; 0x228 <__bad_interrupt>
 13e:	00 00       	nop
 140:	73 c0       	rjmp	.+230    	; 0x228 <__bad_interrupt>
 142:	00 00       	nop
 144:	71 c0       	rjmp	.+226    	; 0x228 <__bad_interrupt>
 146:	00 00       	nop
 148:	6f c0       	rjmp	.+222    	; 0x228 <__bad_interrupt>
 14a:	00 00       	nop
 14c:	6d c0       	rjmp	.+218    	; 0x228 <__bad_interrupt>
 14e:	00 00       	nop
 150:	6b c0       	rjmp	.+214    	; 0x228 <__bad_interrupt>
 152:	00 00       	nop
 154:	69 c0       	rjmp	.+210    	; 0x228 <__bad_interrupt>
 156:	00 00       	nop
 158:	67 c0       	rjmp	.+206    	; 0x228 <__bad_interrupt>
 15a:	00 00       	nop
 15c:	65 c0       	rjmp	.+202    	; 0x228 <__bad_interrupt>
 15e:	00 00       	nop
 160:	63 c0       	rjmp	.+198    	; 0x228 <__bad_interrupt>
 162:	00 00       	nop
 164:	61 c0       	rjmp	.+194    	; 0x228 <__bad_interrupt>
 166:	00 00       	nop
 168:	5f c0       	rjmp	.+190    	; 0x228 <__bad_interrupt>
 16a:	00 00       	nop
 16c:	5d c0       	rjmp	.+186    	; 0x228 <__bad_interrupt>
 16e:	00 00       	nop
 170:	5b c0       	rjmp	.+182    	; 0x228 <__bad_interrupt>
 172:	00 00       	nop
 174:	59 c0       	rjmp	.+178    	; 0x228 <__bad_interrupt>
 176:	00 00       	nop
 178:	57 c0       	rjmp	.+174    	; 0x228 <__bad_interrupt>
 17a:	00 00       	nop
 17c:	55 c0       	rjmp	.+170    	; 0x228 <__bad_interrupt>
 17e:	00 00       	nop
 180:	53 c0       	rjmp	.+166    	; 0x228 <__bad_interrupt>
 182:	00 00       	nop
 184:	51 c0       	rjmp	.+162    	; 0x228 <__bad_interrupt>
 186:	00 00       	nop
 188:	4f c0       	rjmp	.+158    	; 0x228 <__bad_interrupt>
 18a:	00 00       	nop
 18c:	4d c0       	rjmp	.+154    	; 0x228 <__bad_interrupt>
 18e:	00 00       	nop
 190:	4b c0       	rjmp	.+150    	; 0x228 <__bad_interrupt>
 192:	00 00       	nop
 194:	49 c0       	rjmp	.+146    	; 0x228 <__bad_interrupt>
 196:	00 00       	nop
 198:	47 c0       	rjmp	.+142    	; 0x228 <__bad_interrupt>
 19a:	00 00       	nop
 19c:	45 c0       	rjmp	.+138    	; 0x228 <__bad_interrupt>
 19e:	00 00       	nop
 1a0:	43 c0       	rjmp	.+134    	; 0x228 <__bad_interrupt>
 1a2:	00 00       	nop
 1a4:	41 c0       	rjmp	.+130    	; 0x228 <__bad_interrupt>
 1a6:	00 00       	nop
 1a8:	3f c0       	rjmp	.+126    	; 0x228 <__bad_interrupt>
 1aa:	00 00       	nop
 1ac:	3d c0       	rjmp	.+122    	; 0x228 <__bad_interrupt>
 1ae:	00 00       	nop
 1b0:	3b c0       	rjmp	.+118    	; 0x228 <__bad_interrupt>
 1b2:	00 00       	nop
 1b4:	39 c0       	rjmp	.+114    	; 0x228 <__bad_interrupt>
 1b6:	00 00       	nop
 1b8:	37 c0       	rjmp	.+110    	; 0x228 <__bad_interrupt>
 1ba:	00 00       	nop
 1bc:	35 c0       	rjmp	.+106    	; 0x228 <__bad_interrupt>
 1be:	00 00       	nop
 1c0:	33 c0       	rjmp	.+102    	; 0x228 <__bad_interrupt>
 1c2:	00 00       	nop
 1c4:	31 c0       	rjmp	.+98     	; 0x228 <__bad_interrupt>
 1c6:	00 00       	nop
 1c8:	2f c0       	rjmp	.+94     	; 0x228 <__bad_interrupt>
 1ca:	00 00       	nop
 1cc:	2d c0       	rjmp	.+90     	; 0x228 <__bad_interrupt>
 1ce:	00 00       	nop
 1d0:	2b c0       	rjmp	.+86     	; 0x228 <__bad_interrupt>
 1d2:	00 00       	nop
 1d4:	29 c0       	rjmp	.+82     	; 0x228 <__bad_interrupt>
 1d6:	00 00       	nop
 1d8:	27 c0       	rjmp	.+78     	; 0x228 <__bad_interrupt>
 1da:	00 00       	nop
 1dc:	25 c0       	rjmp	.+74     	; 0x228 <__bad_interrupt>
 1de:	00 00       	nop
 1e0:	23 c0       	rjmp	.+70     	; 0x228 <__bad_interrupt>
 1e2:	00 00       	nop
 1e4:	21 c0       	rjmp	.+66     	; 0x228 <__bad_interrupt>
 1e6:	00 00       	nop
 1e8:	1f c0       	rjmp	.+62     	; 0x228 <__bad_interrupt>
 1ea:	00 00       	nop
 1ec:	1d c0       	rjmp	.+58     	; 0x228 <__bad_interrupt>
 1ee:	00 00       	nop
 1f0:	1b c0       	rjmp	.+54     	; 0x228 <__bad_interrupt>
 1f2:	00 00       	nop
 1f4:	19 c0       	rjmp	.+50     	; 0x228 <__bad_interrupt>
 1f6:	00 00       	nop
 1f8:	17 c0       	rjmp	.+46     	; 0x228 <__bad_interrupt>
	...

000001fc <__ctors_end>:
 1fc:	11 24       	eor	r1, r1
 1fe:	1f be       	out	0x3f, r1	; 63
 200:	cf ef       	ldi	r28, 0xFF	; 255
 202:	df e3       	ldi	r29, 0x3F	; 63
 204:	de bf       	out	0x3e, r29	; 62
 206:	cd bf       	out	0x3d, r28	; 61
 208:	00 e0       	ldi	r16, 0x00	; 0
 20a:	0c bf       	out	0x3c, r16	; 60
 20c:	18 be       	out	0x38, r1	; 56
 20e:	19 be       	out	0x39, r1	; 57
 210:	1a be       	out	0x3a, r1	; 58
 212:	1b be       	out	0x3b, r1	; 59

00000214 <__do_clear_bss>:
 214:	20 e2       	ldi	r18, 0x20	; 32
 216:	a0 e0       	ldi	r26, 0x00	; 0
 218:	b0 e2       	ldi	r27, 0x20	; 32
 21a:	01 c0       	rjmp	.+2      	; 0x21e <.do_clear_bss_start>

0000021c <.do_clear_bss_loop>:
 21c:	1d 92       	st	X+, r1

0000021e <.do_clear_bss_start>:
 21e:	a5 31       	cpi	r26, 0x15	; 21
 220:	b2 07       	cpc	r27, r18
 222:	e1 f7       	brne	.-8      	; 0x21c <.do_clear_bss_loop>
 224:	24 d0       	rcall	.+72     	; 0x26e <main>
 226:	2e c1       	rjmp	.+604    	; 0x484 <_exit>

00000228 <__bad_interrupt>:
 228:	eb ce       	rjmp	.-554    	; 0x0 <__vectors>

0000022a <TC0_ConfigClockSource>:
 22a:	fc 01       	movw	r30, r24
 22c:	20 81       	ld	r18, Z
 22e:	20 7f       	andi	r18, 0xF0	; 240
 230:	62 2b       	or	r22, r18
 232:	60 83       	st	Z, r22
 234:	08 95       	ret

00000236 <TC0_ConfigWGM>:
 236:	fc 01       	movw	r30, r24
 238:	21 81       	ldd	r18, Z+1	; 0x01
 23a:	28 7f       	andi	r18, 0xF8	; 248
 23c:	62 2b       	or	r22, r18
 23e:	61 83       	std	Z+1, r22	; 0x01
 240:	08 95       	ret

00000242 <TC0_EnableCCChannels>:
 242:	fc 01       	movw	r30, r24
 244:	21 81       	ldd	r18, Z+1	; 0x01
 246:	60 7f       	andi	r22, 0xF0	; 240
 248:	62 2b       	or	r22, r18
 24a:	61 83       	std	Z+1, r22	; 0x01
 24c:	08 95       	ret

0000024e <send_high>:
	int i;
	for (i=0; 8 > i ;++i) {
		if (bits & (mask << i)) send_high_manchester();
		else send_low_manchester();
	}
}
 24e:	84 ef       	ldi	r24, 0xF4	; 244
 250:	91 e0       	ldi	r25, 0x01	; 1
 252:	e0 e0       	ldi	r30, 0x00	; 0
 254:	f9 e0       	ldi	r31, 0x09	; 9
 256:	80 af       	std	Z+56, r24	; 0x38
 258:	91 af       	std	Z+57, r25	; 0x39
 25a:	8a e0       	ldi	r24, 0x0A	; 10
 25c:	90 e0       	ldi	r25, 0x00	; 0
 25e:	31 e0       	ldi	r19, 0x01	; 1
 260:	34 87       	std	Z+12, r19	; 0x0c
 262:	24 85       	ldd	r18, Z+12	; 0x0c
 264:	20 ff       	sbrs	r18, 0
 266:	fd cf       	rjmp	.-6      	; 0x262 <send_high+0x14>
 268:	01 97       	sbiw	r24, 0x01	; 1
 26a:	d1 f7       	brne	.-12     	; 0x260 <send_high+0x12>
 26c:	08 95       	ret

0000026e <main>:
	
	
	/* Comment out the 3 lines below if you want to use
	   your own pull-up resistors (I recommend using 4.7k).
	*/
	PORTCFG.MPCMASK = 0x03;                                     // Configure several PINxCTRL registers.
 26e:	83 e0       	ldi	r24, 0x03	; 3
 270:	80 93 b0 00 	sts	0x00B0, r24
	PORTC.PIN0CTRL =\
		(PORTC.PIN0CTRL & ~PORT_OPC_gm) | PORT_OPC_PULLUP_gc;   // Use the internal pull-up resistors on PORTC's TWI Ports.
 274:	e0 e4       	ldi	r30, 0x40	; 64
 276:	f6 e0       	ldi	r31, 0x06	; 6
 278:	80 89       	ldd	r24, Z+16	; 0x10
	
	/* Comment out the 3 lines below if you want to use
	   your own pull-up resistors (I recommend using 4.7k).
	*/
	PORTCFG.MPCMASK = 0x03;                                     // Configure several PINxCTRL registers.
	PORTC.PIN0CTRL =\
 27a:	87 7c       	andi	r24, 0xC7	; 199
 27c:	88 61       	ori	r24, 0x18	; 24
 27e:	80 8b       	std	Z+16, r24	; 0x10
		(PORTC.PIN0CTRL & ~PORT_OPC_gm) | PORT_OPC_PULLUP_gc;   // Use the internal pull-up resistors on PORTC's TWI Ports.

	TWI_MasterInit(
 280:	25 e0       	ldi	r18, 0x05	; 5
 282:	40 e4       	ldi	r20, 0x40	; 64
 284:	60 e8       	ldi	r22, 0x80	; 128
 286:	74 e0       	ldi	r23, 0x04	; 4
 288:	80 e0       	ldi	r24, 0x00	; 0
 28a:	90 e2       	ldi	r25, 0x20	; 32
 28c:	5f d0       	rcall	.+190    	; 0x34c <TWI_MasterInit>
		&TWIC,
		TWI_MASTER_INTLVL_LO_gc,
		TWI_BAUDSETTING
	);

	PMIC.CTRL |= PMIC_LOLVLEN_bm;                               // Enable LO interrupt level.
 28e:	e0 ea       	ldi	r30, 0xA0	; 160
 290:	f0 e0       	ldi	r31, 0x00	; 0
 292:	82 81       	ldd	r24, Z+2	; 0x02
 294:	81 60       	ori	r24, 0x01	; 1
 296:	82 83       	std	Z+2, r24	; 0x02
	sei();                                                      // Enable interrupts.
 298:	78 94       	sei
	
	PORTD.DIR = 0x01;                                           // Enable output on PortD0
 29a:	81 e0       	ldi	r24, 0x01	; 1
 29c:	80 93 60 06 	sts	0x0660, r24
	
	TC0_ConfigWGM(&TCD0,TC_WGMODE_SS_gc);                       // Configure single slope mode.
 2a0:	63 e0       	ldi	r22, 0x03	; 3
 2a2:	80 e0       	ldi	r24, 0x00	; 0
 2a4:	99 e0       	ldi	r25, 0x09	; 9
 2a6:	c7 df       	rcall	.-114    	; 0x236 <TC0_ConfigWGM>
	TC0_EnableCCChannels(&TCD0,TC0_CCAEN_bm);                   // Enable compare channel A.
 2a8:	60 e1       	ldi	r22, 0x10	; 16
 2aa:	80 e0       	ldi	r24, 0x00	; 0
 2ac:	99 e0       	ldi	r25, 0x09	; 9
 2ae:	c9 df       	rcall	.-110    	; 0x242 <TC0_EnableCCChannels>
	TC0_ConfigClockSource(&TCD0,TC_CLKSEL_DIV1_gc);             // Start the timer by setting a clock source.
 2b0:	61 e0       	ldi	r22, 0x01	; 1
 2b2:	80 e0       	ldi	r24, 0x00	; 0
 2b4:	99 e0       	ldi	r25, 0x09	; 9
 2b6:	b9 df       	rcall	.-142    	; 0x22a <TC0_ConfigClockSource>
	
	TC_SetPeriod(&TCD0,TIMER_PERIOD);
 2b8:	e0 e0       	ldi	r30, 0x00	; 0
 2ba:	f9 e0       	ldi	r31, 0x09	; 9
 2bc:	88 ee       	ldi	r24, 0xE8	; 232
 2be:	93 e0       	ldi	r25, 0x03	; 3
 2c0:	86 a3       	std	Z+38, r24	; 0x26
 2c2:	97 a3       	std	Z+39, r25	; 0x27
	TC_SetCompareA(&TCD0,TIMER_PERIOD/2);
 2c4:	84 ef       	ldi	r24, 0xF4	; 244
 2c6:	91 e0       	ldi	r25, 0x01	; 1
 2c8:	80 af       	std	Z+56, r24	; 0x38
 2ca:	91 af       	std	Z+57, r25	; 0x39
	
	twiMaster.readData[0] = 0x00;
 2cc:	10 92 0b 20 	sts	0x200B, r1
	twiMaster.readData[1] = 0x00;
 2d0:	10 92 0c 20 	sts	0x200C, r1
	twiMaster.readData[2] = 0x00;
 2d4:	10 92 0d 20 	sts	0x200D, r1
	twiMaster.readData[3] = 0x00;
 2d8:	10 92 0e 20 	sts	0x200E, r1
		for (i=TWIM_READ_BUFFER_SIZE-1; 0 <= i ;--i) {          // Iterate through the results.
			send_byte_manchester(twiMaster.readData[i]);        // Send the data using Manchester encoding.
		}
		*/
	//}
	send_high();
 2dc:	b8 df       	rcall	.-144    	; 0x24e <send_high>
}
 2de:	80 e0       	ldi	r24, 0x00	; 0
 2e0:	90 e0       	ldi	r25, 0x00	; 0
 2e2:	08 95       	ret

000002e4 <__vector_13>:


/*! TWIC Master Interrupt vector. */
ISR(TWIC_TWIM_vect){
 2e4:	1f 92       	push	r1
 2e6:	0f 92       	push	r0
 2e8:	0f b6       	in	r0, 0x3f	; 63
 2ea:	0f 92       	push	r0
 2ec:	11 24       	eor	r1, r1
 2ee:	08 b6       	in	r0, 0x38	; 56
 2f0:	0f 92       	push	r0
 2f2:	18 be       	out	0x38, r1	; 56
 2f4:	09 b6       	in	r0, 0x39	; 57
 2f6:	0f 92       	push	r0
 2f8:	19 be       	out	0x39, r1	; 57
 2fa:	0b b6       	in	r0, 0x3b	; 59
 2fc:	0f 92       	push	r0
 2fe:	1b be       	out	0x3b, r1	; 59
 300:	2f 93       	push	r18
 302:	3f 93       	push	r19
 304:	4f 93       	push	r20
 306:	5f 93       	push	r21
 308:	6f 93       	push	r22
 30a:	7f 93       	push	r23
 30c:	8f 93       	push	r24
 30e:	9f 93       	push	r25
 310:	af 93       	push	r26
 312:	bf 93       	push	r27
 314:	ef 93       	push	r30
 316:	ff 93       	push	r31
	TWI_MasterInterruptHandler(&twiMaster);
 318:	80 e0       	ldi	r24, 0x00	; 0
 31a:	90 e2       	ldi	r25, 0x20	; 32
 31c:	a3 d0       	rcall	.+326    	; 0x464 <TWI_MasterInterruptHandler>
}
 31e:	ff 91       	pop	r31
 320:	ef 91       	pop	r30
 322:	bf 91       	pop	r27
 324:	af 91       	pop	r26
 326:	9f 91       	pop	r25
 328:	8f 91       	pop	r24
 32a:	7f 91       	pop	r23
 32c:	6f 91       	pop	r22
 32e:	5f 91       	pop	r21
 330:	4f 91       	pop	r20
 332:	3f 91       	pop	r19
 334:	2f 91       	pop	r18
 336:	0f 90       	pop	r0
 338:	0b be       	out	0x3b, r0	; 59
 33a:	0f 90       	pop	r0
 33c:	09 be       	out	0x39, r0	; 57
 33e:	0f 90       	pop	r0
 340:	08 be       	out	0x38, r0	; 56
 342:	0f 90       	pop	r0
 344:	0f be       	out	0x3f, r0	; 63
 346:	0f 90       	pop	r0
 348:	1f 90       	pop	r1
 34a:	18 95       	reti

0000034c <TWI_MasterInit>:
 34c:	fc 01       	movw	r30, r24
 34e:	60 83       	st	Z, r22
 350:	71 83       	std	Z+1, r23	; 0x01
 352:	48 63       	ori	r20, 0x38	; 56
 354:	db 01       	movw	r26, r22
 356:	11 96       	adiw	r26, 0x01	; 1
 358:	4c 93       	st	X, r20
 35a:	a0 81       	ld	r26, Z
 35c:	b1 81       	ldd	r27, Z+1	; 0x01
 35e:	15 96       	adiw	r26, 0x05	; 5
 360:	2c 93       	st	X, r18
 362:	01 90       	ld	r0, Z+
 364:	f0 81       	ld	r31, Z
 366:	e0 2d       	mov	r30, r0
 368:	81 e0       	ldi	r24, 0x01	; 1
 36a:	84 83       	std	Z+4, r24	; 0x04
 36c:	08 95       	ret

0000036e <TWI_MasterArbitrationLostBusErrorHandler>:
 36e:	fc 01       	movw	r30, r24
 370:	a0 81       	ld	r26, Z
 372:	b1 81       	ldd	r27, Z+1	; 0x01
 374:	14 96       	adiw	r26, 0x04	; 4
 376:	8c 91       	ld	r24, X
 378:	14 97       	sbiw	r26, 0x04	; 4
 37a:	82 ff       	sbrs	r24, 2
 37c:	03 c0       	rjmp	.+6      	; 0x384 <TWI_MasterArbitrationLostBusErrorHandler+0x16>
 37e:	94 e0       	ldi	r25, 0x04	; 4
 380:	94 8b       	std	Z+20, r25	; 0x14
 382:	02 c0       	rjmp	.+4      	; 0x388 <TWI_MasterArbitrationLostBusErrorHandler+0x1a>
 384:	93 e0       	ldi	r25, 0x03	; 3
 386:	94 8b       	std	Z+20, r25	; 0x14
 388:	88 60       	ori	r24, 0x08	; 8
 38a:	14 96       	adiw	r26, 0x04	; 4
 38c:	8c 93       	st	X, r24
 38e:	13 8a       	std	Z+19, r1	; 0x13
 390:	08 95       	ret

00000392 <TWI_MasterTransactionFinished>:
 392:	fc 01       	movw	r30, r24
 394:	64 8b       	std	Z+20, r22	; 0x14
 396:	13 8a       	std	Z+19, r1	; 0x13
 398:	08 95       	ret

0000039a <TWI_MasterReadHandler>:
 39a:	cf 93       	push	r28
 39c:	df 93       	push	r29
 39e:	ec 01       	movw	r28, r24
 3a0:	8a 89       	ldd	r24, Y+18	; 0x12
 3a2:	84 30       	cpi	r24, 0x04	; 4
 3a4:	98 f4       	brcc	.+38     	; 0x3cc <TWI_MasterReadHandler+0x32>
 3a6:	e0 e4       	ldi	r30, 0x40	; 64
 3a8:	f6 e0       	ldi	r31, 0x06	; 6
 3aa:	80 81       	ld	r24, Z
 3ac:	10 82       	st	Z, r1
 3ae:	a8 81       	ld	r26, Y
 3b0:	b9 81       	ldd	r27, Y+1	; 0x01
 3b2:	17 96       	adiw	r26, 0x07	; 7
 3b4:	9c 91       	ld	r25, X
 3b6:	2a 89       	ldd	r18, Y+18	; 0x12
 3b8:	de 01       	movw	r26, r28
 3ba:	a2 0f       	add	r26, r18
 3bc:	b1 1d       	adc	r27, r1
 3be:	1b 96       	adiw	r26, 0x0b	; 11
 3c0:	9c 93       	st	X, r25
 3c2:	9a 89       	ldd	r25, Y+18	; 0x12
 3c4:	9f 5f       	subi	r25, 0xFF	; 255
 3c6:	9a 8b       	std	Y+18, r25	; 0x12
 3c8:	80 83       	st	Z, r24
 3ca:	07 c0       	rjmp	.+14     	; 0x3da <TWI_MasterReadHandler+0x40>
 3cc:	e8 81       	ld	r30, Y
 3ce:	f9 81       	ldd	r31, Y+1	; 0x01
 3d0:	83 e0       	ldi	r24, 0x03	; 3
 3d2:	83 83       	std	Z+3, r24	; 0x03
 3d4:	62 e0       	ldi	r22, 0x02	; 2
 3d6:	ce 01       	movw	r24, r28
 3d8:	dc df       	rcall	.-72     	; 0x392 <TWI_MasterTransactionFinished>
 3da:	98 89       	ldd	r25, Y+16	; 0x10
 3dc:	8a 89       	ldd	r24, Y+18	; 0x12
 3de:	89 17       	cp	r24, r25
 3e0:	28 f4       	brcc	.+10     	; 0x3ec <TWI_MasterReadHandler+0x52>
 3e2:	e8 81       	ld	r30, Y
 3e4:	f9 81       	ldd	r31, Y+1	; 0x01
 3e6:	82 e0       	ldi	r24, 0x02	; 2
 3e8:	83 83       	std	Z+3, r24	; 0x03
 3ea:	07 c0       	rjmp	.+14     	; 0x3fa <TWI_MasterReadHandler+0x60>
 3ec:	e8 81       	ld	r30, Y
 3ee:	f9 81       	ldd	r31, Y+1	; 0x01
 3f0:	87 e0       	ldi	r24, 0x07	; 7
 3f2:	83 83       	std	Z+3, r24	; 0x03
 3f4:	61 e0       	ldi	r22, 0x01	; 1
 3f6:	ce 01       	movw	r24, r28
 3f8:	cc df       	rcall	.-104    	; 0x392 <TWI_MasterTransactionFinished>
 3fa:	df 91       	pop	r29
 3fc:	cf 91       	pop	r28
 3fe:	08 95       	ret

00000400 <TWI_MasterWriteHandler>:
 400:	cf 93       	push	r28
 402:	df 93       	push	r29
 404:	fc 01       	movw	r30, r24
 406:	97 85       	ldd	r25, Z+15	; 0x0f
 408:	20 89       	ldd	r18, Z+16	; 0x10
 40a:	a0 81       	ld	r26, Z
 40c:	b1 81       	ldd	r27, Z+1	; 0x01
 40e:	14 96       	adiw	r26, 0x04	; 4
 410:	8c 91       	ld	r24, X
 412:	14 97       	sbiw	r26, 0x04	; 4
 414:	84 ff       	sbrs	r24, 4
 416:	07 c0       	rjmp	.+14     	; 0x426 <TWI_MasterWriteHandler+0x26>
 418:	83 e0       	ldi	r24, 0x03	; 3
 41a:	13 96       	adiw	r26, 0x03	; 3
 41c:	8c 93       	st	X, r24
 41e:	85 e0       	ldi	r24, 0x05	; 5
 420:	84 8b       	std	Z+20, r24	; 0x14
 422:	13 8a       	std	Z+19, r1	; 0x13
 424:	1c c0       	rjmp	.+56     	; 0x45e <TWI_MasterWriteHandler+0x5e>
 426:	81 89       	ldd	r24, Z+17	; 0x11
 428:	89 17       	cp	r24, r25
 42a:	58 f4       	brcc	.+22     	; 0x442 <TWI_MasterWriteHandler+0x42>
 42c:	81 89       	ldd	r24, Z+17	; 0x11
 42e:	ef 01       	movw	r28, r30
 430:	c8 0f       	add	r28, r24
 432:	d1 1d       	adc	r29, r1
 434:	8b 81       	ldd	r24, Y+3	; 0x03
 436:	17 96       	adiw	r26, 0x07	; 7
 438:	8c 93       	st	X, r24
 43a:	81 89       	ldd	r24, Z+17	; 0x11
 43c:	8f 5f       	subi	r24, 0xFF	; 255
 43e:	81 8b       	std	Z+17, r24	; 0x11
 440:	0e c0       	rjmp	.+28     	; 0x45e <TWI_MasterWriteHandler+0x5e>
 442:	82 89       	ldd	r24, Z+18	; 0x12
 444:	82 17       	cp	r24, r18
 446:	28 f4       	brcc	.+10     	; 0x452 <TWI_MasterWriteHandler+0x52>
 448:	82 81       	ldd	r24, Z+2	; 0x02
 44a:	81 60       	ori	r24, 0x01	; 1
 44c:	16 96       	adiw	r26, 0x06	; 6
 44e:	8c 93       	st	X, r24
 450:	06 c0       	rjmp	.+12     	; 0x45e <TWI_MasterWriteHandler+0x5e>
 452:	83 e0       	ldi	r24, 0x03	; 3
 454:	13 96       	adiw	r26, 0x03	; 3
 456:	8c 93       	st	X, r24
 458:	61 e0       	ldi	r22, 0x01	; 1
 45a:	cf 01       	movw	r24, r30
 45c:	9a df       	rcall	.-204    	; 0x392 <TWI_MasterTransactionFinished>
 45e:	df 91       	pop	r29
 460:	cf 91       	pop	r28
 462:	08 95       	ret

00000464 <TWI_MasterInterruptHandler>:
 464:	dc 01       	movw	r26, r24
 466:	ed 91       	ld	r30, X+
 468:	fc 91       	ld	r31, X
 46a:	24 81       	ldd	r18, Z+4	; 0x04
 46c:	32 2f       	mov	r19, r18
 46e:	3c 70       	andi	r19, 0x0C	; 12
 470:	09 f0       	breq	.+2      	; 0x474 <TWI_MasterInterruptHandler+0x10>
 472:	7d cf       	rjmp	.-262    	; 0x36e <TWI_MasterArbitrationLostBusErrorHandler>
 474:	26 ff       	sbrs	r18, 6
 476:	01 c0       	rjmp	.+2      	; 0x47a <TWI_MasterInterruptHandler+0x16>
 478:	c3 cf       	rjmp	.-122    	; 0x400 <TWI_MasterWriteHandler>
 47a:	22 23       	and	r18, r18
 47c:	0c f4       	brge	.+2      	; 0x480 <TWI_MasterInterruptHandler+0x1c>
 47e:	8d cf       	rjmp	.-230    	; 0x39a <TWI_MasterReadHandler>
 480:	66 e0       	ldi	r22, 0x06	; 6
 482:	87 cf       	rjmp	.-242    	; 0x392 <TWI_MasterTransactionFinished>

00000484 <_exit>:
 484:	f8 94       	cli

00000486 <__stop_program>:
 486:	ff cf       	rjmp	.-2      	; 0x486 <__stop_program>
